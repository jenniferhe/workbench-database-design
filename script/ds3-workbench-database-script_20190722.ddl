-- Generated by Oracle SQL Developer Data Modeler 19.1.0.081.0911
--   at:        2019-07-22 13:04:06 EDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



DROP TABLE major CASCADE CONSTRAINTS;

DROP TABLE match_recommendation CASCADE CONSTRAINTS;

DROP TABLE profile_type CASCADE CONSTRAINTS;

DROP TABLE program CASCADE CONSTRAINTS;

DROP TABLE project CASCADE CONSTRAINTS;

DROP TABLE project_funding_status CASCADE CONSTRAINTS;

DROP TABLE project_researcher CASCADE CONSTRAINTS;

DROP TABLE project_resource_requirement CASCADE CONSTRAINTS;

DROP TABLE researcher CASCADE CONSTRAINTS;

DROP TABLE "resource" CASCADE CONSTRAINTS;

DROP TABLE role CASCADE CONSTRAINTS;

DROP TABLE role_attribute CASCADE CONSTRAINTS;

DROP TABLE skill CASCADE CONSTRAINTS;

DROP TABLE status CASCADE CONSTRAINTS;

DROP TABLE "user" CASCADE CONSTRAINTS;

DROP TABLE user_profile_attribute CASCADE CONSTRAINTS;

DROP TABLE user_profile_page CASCADE CONSTRAINTS;

DROP TABLE user_role CASCADE CONSTRAINTS;

DROP TABLE user_skill CASCADE CONSTRAINTS;

CREATE TABLE major (
    major_id      NUMBER NOT NULL,
    short_name    NVARCHAR2(30) DEFAULT 'NA' NOT NULL,
    long_name     NVARCHAR2(255) DEFAULT 'Not Available/Applicable',
    description   NVARCHAR2(3200) DEFAULT 'This field is unknown or undefined for the record.'
);

ALTER TABLE major ADD CONSTRAINT major_pk PRIMARY KEY ( major_id );

ALTER TABLE major ADD CONSTRAINT major_short_name_un UNIQUE ( short_name );

CREATE TABLE match_recommendation ( 
--  This is the surrogate key for the entity holding the Match Recommendation
--  results.
    match_recommendation_id    NUMBER DEFAULT - 1 NOT NULL,
    project_resource_rqmt_id   NUMBER DEFAULT - 1 NOT NULL,
    resource_id                NUMBER DEFAULT - 1 NOT NULL,
    priority                   CHAR(1) DEFAULT 'True'
);

ALTER TABLE match_recommendation ADD CONSTRAINT match_recommendation_pk PRIMARY KEY ( match_recommendation_id );

ALTER TABLE match_recommendation ADD CONSTRAINT match_recommendation__un UNIQUE ( project_resource_rqmt_id,
                                                                                  resource_id );

CREATE TABLE profile_type (
    profile_type_id   NUMBER NOT NULL,
    short_name        NVARCHAR2(30) DEFAULT 'NA' NOT NULL,
    long_name         NVARCHAR2(255) DEFAULT 'Not Available/Applicable',
    description       NVARCHAR2(3200) DEFAULT 'This field is unknown or undefined for the record.'
);

ALTER TABLE profile_type ADD CONSTRAINT profile_type_pk PRIMARY KEY ( profile_type_id );

ALTER TABLE profile_type ADD CONSTRAINT profile_type_short_name_un UNIQUE ( short_name );

CREATE TABLE program (
    program_id    NUMBER NOT NULL,
    short_name    NVARCHAR2(30) DEFAULT 'NA' NOT NULL,
    long_name     NVARCHAR2(255) DEFAULT 'Not Available/Applicable',
    description   NVARCHAR2(3200) DEFAULT 'This field is unknown or undefined for the record.'
);

ALTER TABLE program ADD CONSTRAINT program_pk PRIMARY KEY ( program_id );

ALTER TABLE program ADD CONSTRAINT program_short_name_un UNIQUE ( short_name );

CREATE TABLE project (
    project_id            NUMBER DEFAULT - 1 NOT NULL, 
--  This field stores the project title which uniquely identifies each project.
    title                 NVARCHAR2(30) DEFAULT 'NA' NOT NULL,
    description           NVARCHAR2(3200) DEFAULT 'This field is unknown or undefined for the record.', 
--  This attribute stores the estimated number of total person hours required
--  for the project.
    estimated_effort      SMALLINT DEFAULT 0,
    expected_start_date   DATE DEFAULT '12/31/9999',
    expected_end_date     DATE DEFAULT '12/31/9999',
    project_status_id     NUMBER NOT NULL
);

ALTER TABLE project ADD CONSTRAINT project_pk PRIMARY KEY ( project_id );

ALTER TABLE project ADD CONSTRAINT project_title_un UNIQUE ( title );

CREATE TABLE project_funding_status ( 
--  This is the surrogate key for the project-status mapping entity for storing
--  the funding availability for a project.
    project_funding_status_id   NUMBER DEFAULT - 1 NOT NULL,
    project_id                  NUMBER DEFAULT - 1 NOT NULL,
    funding_status_id           NUMBER NOT NULL
);

ALTER TABLE project_funding_status ADD CONSTRAINT project_funding_status_pk PRIMARY KEY ( project_funding_status_id );

ALTER TABLE project_funding_status ADD CONSTRAINT project_funding_status__un UNIQUE ( project_id,
                                                                                      funding_status_id );

CREATE TABLE project_researcher ( 
--  This is the surrogate key for the project-researcher mapping entity.
    project_researcher_id   NUMBER DEFAULT - 1 NOT NULL,
    project_id              NUMBER DEFAULT - 1 NOT NULL,
    researcher_id           NUMBER DEFAULT - 1 NOT NULL, 
--  This attribute signifies the primary researcher(s) who holds the ownership
--  for the project.
    is_owner                CHAR(1) DEFAULT 'True' NOT NULL
);

ALTER TABLE project_researcher ADD CONSTRAINT project_researcher_pk PRIMARY KEY ( project_researcher_id );

ALTER TABLE project_researcher ADD CONSTRAINT project_researcher__un UNIQUE ( project_id,
                                                                              researcher_id );

CREATE TABLE project_resource_requirement (
    project_resource_rqmt_id   NUMBER DEFAULT - 1 NOT NULL,
    project_id                 NUMBER DEFAULT - 1 NOT NULL, 
--  This field provides the number of hours/week required for this opportunity
--  under a particular project. 
    weekly_hours               SMALLINT DEFAULT 0, 
--  This field stores the total number of weeks required for this opportunity
--  under a particular project.
    total_weeks                SMALLINT DEFAULT 0,
    expected_start_date        DATE DEFAULT '12/31/9999',
    expected_end_date          DATE DEFAULT '12/31/9999'
);

--  ERROR: PK name length exceeds maximum allowed length(30) 
ALTER TABLE project_resource_requirement ADD CONSTRAINT project_resource_requirement_pk PRIMARY KEY ( project_resource_rqmt_id );

--  ERROR: UK name length exceeds maximum allowed length(30) 

ALTER TABLE project_resource_requirement ADD CONSTRAINT project_resource_requirement_un UNIQUE ( project_id );

CREATE TABLE researcher (
    researcher_id    NUMBER DEFAULT - 1 NOT NULL, 
--  This attribute is the natural key for the entity to uniquely identify a
--  Researcher.
    researcher_key   NVARCHAR2(30) DEFAULT 'NA' NOT NULL,
    user_role_id     NUMBER DEFAULT - 1 NOT NULL
);

ALTER TABLE researcher ADD CONSTRAINT researcher_pk PRIMARY KEY ( researcher_id );

ALTER TABLE researcher ADD CONSTRAINT researcher_researcher_key_un UNIQUE ( researcher_key );

CREATE TABLE "resource" (
    resource_id                  NUMBER DEFAULT - 1 NOT NULL,
    user_role_id                 NUMBER DEFAULT - 1 NOT NULL,
    current_program_id           NUMBER NOT NULL,
    current_major_id             NUMBER NOT NULL,
    graduation_month             SMALLINT DEFAULT 12,
    graduation_year              SMALLINT DEFAULT 9999,
    current_gpa                  NUMBER(3, 2) DEFAULT 0.00,
    undergrad_program_id         NUMBER NOT NULL,
    undergrad_major_id           NUMBER NOT NULL,
    undergrad_graduation_month   SMALLINT DEFAULT 12,
    undergrad_graduation_year    SMALLINT DEFAULT 9999,
    undergrad_gpa                NUMBER(3, 2) DEFAULT 0.00
);

ALTER TABLE "resource" ADD CHECK ( graduation_month BETWEEN 1 AND 12 );

ALTER TABLE "resource" ADD CHECK ( graduation_year BETWEEN 1900 AND 9999 );

ALTER TABLE "resource" ADD CHECK ( undergrad_graduation_month BETWEEN 1 AND 12 );

ALTER TABLE "resource" ADD CHECK ( undergrad_graduation_year BETWEEN 1900 AND 9999 );

ALTER TABLE "resource" ADD CONSTRAINT resource_pk PRIMARY KEY ( resource_id );

CREATE TABLE role (
    role_id       NUMBER DEFAULT - 1 NOT NULL,
    short_name    NVARCHAR2(30) DEFAULT 'NA' NOT NULL,
    description   NVARCHAR2(3200) DEFAULT 'This field is unknown or undefined for the record.',
    long_name     NVARCHAR2(255) DEFAULT 'Not Available/Applicable'
);

ALTER TABLE role ADD CONSTRAINT role_pk PRIMARY KEY ( role_id );

ALTER TABLE role ADD CONSTRAINT role_short_name_un UNIQUE ( short_name );

CREATE TABLE role_attribute ( 
--  This is the surrogate key for the role-attribute mapping entity.
    role_attribute_id           NUMBER DEFAULT - 1 NOT NULL,
    role_id                     NUMBER DEFAULT - 1 NOT NULL,
    user_profile_attribute_id   NUMBER DEFAULT - 1 NOT NULL
);

ALTER TABLE role_attribute ADD CONSTRAINT role_attribute_pk PRIMARY KEY ( role_attribute_id );

ALTER TABLE role_attribute ADD CONSTRAINT role_attribute_un UNIQUE ( role_id,
                                                                     user_profile_attribute_id );

CREATE TABLE skill (
    skill_id          NUMBER NOT NULL,
    short_name        NVARCHAR2(30) DEFAULT 'NA' NOT NULL,
    long_name         NVARCHAR2(255) DEFAULT 'Not Available/Applicable',
    description       NVARCHAR2(3200) DEFAULT 'This field is unknown or undefined for the record.',
    parent_skill_id   NUMBER NOT NULL
);

ALTER TABLE skill ADD CONSTRAINT skill_pk PRIMARY KEY ( skill_id );

ALTER TABLE skill ADD CONSTRAINT skill_short_name_un UNIQUE ( short_name,
                                                              parent_skill_id );

CREATE TABLE status (
    status_id     NUMBER NOT NULL,
    short_name    NVARCHAR2(30) DEFAULT 'NA',
    long_name     NVARCHAR2(255) DEFAULT 'Not Available/Applicable',
    description   NVARCHAR2(3200) DEFAULT 'This field is unknown or undefined for the record.', 
--  This attribute signifies the domain to which the corresponding Status
--  record belong, e.g. User Status, Project Funding Status etc.
    type          NVARCHAR2(30) DEFAULT 'NA'
);

ALTER TABLE status ADD CONSTRAINT status_pk PRIMARY KEY ( status_id );

--  This is the natural key for the Status entity.

ALTER TABLE status ADD CONSTRAINT status_short_name_type_un UNIQUE ( short_name,
                                                                     type );

CREATE TABLE "user" (
    user_id                 NUMBER DEFAULT - 1
        CONSTRAINT nnc_user_user_id NOT NULL,
    first_name              NVARCHAR2(30) DEFAULT 'NA'
        CONSTRAINT nnc_user_first_name NOT NULL,
    last_name               NVARCHAR2(30) DEFAULT 'NA', 
--  This is the natural key uniquely identifying a user, e.g. Net ID for NYU
--  affiliated users.
    user_key                NVARCHAR2(30) DEFAULT 'NA'
        CONSTRAINT nnc_user_user_key NOT NULL,
    email_id                NVARCHAR2(255) DEFAULT 'Not Available/Applicable'
        CONSTRAINT nnc_user_email_id NOT NULL, 
--  This attribute signifies the type of affiliation for the user, viz
--  Industry/Academic.
    affiliation_type        NVARCHAR2(255) DEFAULT 'Not Available/Applicable'
        CONSTRAINT nnc_user_affiliation_type NOT NULL, 
--  This attribute provides the name of the affiliated organization.
    affiliation_name        NVARCHAR2(255) DEFAULT 'Not Available/Applicable'
        CONSTRAINT nnc_user_affiliation_name NOT NULL,
    department              NVARCHAR2(255) DEFAULT 'Not Available/Applicable',
    sub_department          NVARCHAR2(255) DEFAULT 'Not Available/Applicable',
    affiliation_status_id   NUMBER
        CONSTRAINT nnc_user_affiliation_status_id NOT NULL
);

ALTER TABLE "user" ADD CONSTRAINT user_pk PRIMARY KEY ( user_id );

ALTER TABLE "user" ADD CONSTRAINT user_user_key_un UNIQUE ( user_key );

CREATE TABLE user_profile_attribute (
    user_profile_attribute_id   NUMBER DEFAULT - 1 NOT NULL,
    short_name                  NVARCHAR2(30) DEFAULT 'NA' NOT NULL,
    long_name                   NVARCHAR2(255) DEFAULT 'Not Available/Applicable',
    description                 NVARCHAR2(3200) DEFAULT 'This field is unknown or undefined for the record.'
);

ALTER TABLE user_profile_attribute ADD CONSTRAINT user_profile_attribute_pk PRIMARY KEY ( user_profile_attribute_id );

--  ERROR: UK name length exceeds maximum allowed length(30) 

ALTER TABLE user_profile_attribute ADD CONSTRAINT user_profile_attribute_short_name_un UNIQUE ( short_name );

CREATE TABLE user_profile_page (
    user_profile_page_id   NUMBER NOT NULL,
    user_id                NUMBER DEFAULT - 1 NOT NULL,
    profile_type_id        NUMBER NOT NULL,
    webpage_link           NVARCHAR2(3200) DEFAULT 'This field is unknown or undefined for the record.'
);

ALTER TABLE user_profile_page ADD CONSTRAINT user_profile_page_pk PRIMARY KEY ( user_profile_page_id );

ALTER TABLE user_profile_page
    ADD CONSTRAINT user_profile_page_un UNIQUE ( user_id,
                                                 profile_type_id,
                                                 webpage_link );

CREATE TABLE user_role ( 
--  This is the surrogate key for the user-role mapping entity.
    user_role_id   NUMBER DEFAULT - 1 NOT NULL,
    user_id        NUMBER DEFAULT - 1 NOT NULL,
    role_id        NUMBER DEFAULT - 1 NOT NULL
);

ALTER TABLE user_role ADD CONSTRAINT user_role_pk PRIMARY KEY ( user_role_id );

ALTER TABLE user_role ADD CONSTRAINT user_role_un UNIQUE ( user_id,
                                                           role_id );

CREATE TABLE user_skill ( 
--  This is the surrogate key for the user-skill mapping entity.
    user_skill_id   NUMBER DEFAULT - 1 NOT NULL,
    user_id         NUMBER DEFAULT - 1 NOT NULL,
    skill_id        NUMBER NOT NULL
);

ALTER TABLE user_skill ADD CONSTRAINT user_skill_pk PRIMARY KEY ( user_skill_id );

ALTER TABLE user_skill ADD CONSTRAINT user_skill_un UNIQUE ( user_id,
                                                             skill_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE match_recommendation
    ADD CONSTRAINT match_recommendation_project_resource_requirement_fk FOREIGN KEY ( project_resource_rqmt_id )
        REFERENCES project_resource_requirement ( project_resource_rqmt_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE match_recommendation
    ADD CONSTRAINT match_recommendation_resource_fk FOREIGN KEY ( resource_id )
        REFERENCES "resource" ( resource_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE project_funding_status
    ADD CONSTRAINT project_funding_status_project_fk FOREIGN KEY ( project_id )
        REFERENCES project ( project_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE project_funding_status
    ADD CONSTRAINT project_funding_status_status_fk FOREIGN KEY ( funding_status_id )
        REFERENCES status ( status_id );

ALTER TABLE project_researcher
    ADD CONSTRAINT project_researcher_project_fk FOREIGN KEY ( project_id )
        REFERENCES project ( project_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE project_researcher
    ADD CONSTRAINT project_researcher_researcher_fk FOREIGN KEY ( researcher_id )
        REFERENCES researcher ( researcher_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE project_resource_requirement
    ADD CONSTRAINT project_resource_requirement_project_fk FOREIGN KEY ( project_id )
        REFERENCES project ( project_id );

ALTER TABLE project
    ADD CONSTRAINT project_status_fk FOREIGN KEY ( project_status_id )
        REFERENCES status ( status_id );

ALTER TABLE researcher
    ADD CONSTRAINT researcher_user_role_fk FOREIGN KEY ( user_role_id )
        REFERENCES user_role ( user_role_id );

ALTER TABLE "resource"
    ADD CONSTRAINT resource_major_fk FOREIGN KEY ( current_major_id )
        REFERENCES major ( major_id );

ALTER TABLE "resource"
    ADD CONSTRAINT resource_major_fkv2 FOREIGN KEY ( undergrad_major_id )
        REFERENCES major ( major_id );

ALTER TABLE "resource"
    ADD CONSTRAINT resource_program_fk FOREIGN KEY ( current_program_id )
        REFERENCES program ( program_id );

ALTER TABLE "resource"
    ADD CONSTRAINT resource_program_fkv2 FOREIGN KEY ( undergrad_program_id )
        REFERENCES program ( program_id );

ALTER TABLE "resource"
    ADD CONSTRAINT resource_user_role_fk FOREIGN KEY ( user_role_id )
        REFERENCES user_role ( user_role_id );

ALTER TABLE role_attribute
    ADD CONSTRAINT role_attribute_role_fk FOREIGN KEY ( role_id )
        REFERENCES role ( role_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE role_attribute
    ADD CONSTRAINT role_attribute_user_profile_attribute_fk FOREIGN KEY ( user_profile_attribute_id )
        REFERENCES user_profile_attribute ( user_profile_attribute_id );

ALTER TABLE skill
    ADD CONSTRAINT skill_skill_fk FOREIGN KEY ( parent_skill_id )
        REFERENCES skill ( skill_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE user_profile_page
    ADD CONSTRAINT user_profile_page_profile_type_fk FOREIGN KEY ( profile_type_id )
        REFERENCES profile_type ( profile_type_id );

ALTER TABLE user_profile_page
    ADD CONSTRAINT user_profile_page_user_fk FOREIGN KEY ( user_id )
        REFERENCES "user" ( user_id );

ALTER TABLE user_role
    ADD CONSTRAINT user_role_role_fk FOREIGN KEY ( role_id )
        REFERENCES role ( role_id );

ALTER TABLE user_role
    ADD CONSTRAINT user_role_user_fk FOREIGN KEY ( user_id )
        REFERENCES "user" ( user_id );

ALTER TABLE user_skill
    ADD CONSTRAINT user_skill_skill_fk FOREIGN KEY ( skill_id )
        REFERENCES skill ( skill_id );

ALTER TABLE user_skill
    ADD CONSTRAINT user_skill_user_fk FOREIGN KEY ( user_id )
        REFERENCES "user" ( user_id );

ALTER TABLE "user"
    ADD CONSTRAINT user_status_fk FOREIGN KEY ( affiliation_status_id )
        REFERENCES status ( status_id );

CREATE SEQUENCE major_major_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER major_major_id_trg BEFORE
    INSERT ON major
    FOR EACH ROW
    WHEN ( new.major_id IS NULL )
BEGIN
    :new.major_id := major_major_id_seq.nextval;
END;
/

CREATE SEQUENCE profile_type_profile_type_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER profile_type_profile_type_id BEFORE
    INSERT ON profile_type
    FOR EACH ROW
    WHEN ( new.profile_type_id IS NULL )
BEGIN
    :new.profile_type_id := profile_type_profile_type_id.nextval;
END;
/

CREATE SEQUENCE program_program_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER program_program_id_trg BEFORE
    INSERT ON program
    FOR EACH ROW
    WHEN ( new.program_id IS NULL )
BEGIN
    :new.program_id := program_program_id_seq.nextval;
END;
/

CREATE SEQUENCE project_project_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER project_project_id_trg BEFORE
    INSERT ON project
    FOR EACH ROW
    WHEN ( new.project_id IS NULL )
BEGIN
    :new.project_id := project_project_id_seq.nextval;
END;
/

CREATE SEQUENCE project_resource_requirement_p START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER project_resource_requirement_p BEFORE
    INSERT ON project_resource_requirement
    FOR EACH ROW
    WHEN ( new.project_resource_rqmt_id IS NULL )
BEGIN
    :new.project_resource_rqmt_id := project_resource_requirement_p.nextval;
END;
/

CREATE SEQUENCE researcher_researcher_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER researcher_researcher_id_trg BEFORE
    INSERT ON researcher
    FOR EACH ROW
    WHEN ( new.researcher_id IS NULL )
BEGIN
    :new.researcher_id := researcher_researcher_id_seq.nextval;
END;
/

CREATE SEQUENCE resource_resource_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER resource_resource_id_trg BEFORE
    INSERT ON "resource"
    FOR EACH ROW
    WHEN ( new.resource_id IS NULL )
BEGIN
    :new.resource_id := resource_resource_id_seq.nextval;
END;
/

CREATE SEQUENCE role_role_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER role_role_id_trg BEFORE
    INSERT ON role
    FOR EACH ROW
    WHEN ( new.role_id IS NULL )
BEGIN
    :new.role_id := role_role_id_seq.nextval;
END;
/

CREATE SEQUENCE skill_skill_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER skill_skill_id_trg BEFORE
    INSERT ON skill
    FOR EACH ROW
    WHEN ( new.skill_id IS NULL )
BEGIN
    :new.skill_id := skill_skill_id_seq.nextval;
END;
/

CREATE SEQUENCE status_status_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER status_status_id_trg BEFORE
    INSERT ON status
    FOR EACH ROW
    WHEN ( new.status_id IS NULL )
BEGIN
    :new.status_id := status_status_id_seq.nextval;
END;
/

CREATE SEQUENCE user_user_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER user_user_id_trg BEFORE
    INSERT ON "user"
    FOR EACH ROW
    WHEN ( new.user_id IS NULL )
BEGIN
    :new.user_id := user_user_id_seq.nextval;
END;
/

CREATE SEQUENCE user_profile_attribute_user_pr START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER user_profile_attribute_user_pr BEFORE
    INSERT ON user_profile_attribute
    FOR EACH ROW
    WHEN ( new.user_profile_attribute_id IS NULL )
BEGIN
    :new.user_profile_attribute_id := user_profile_attribute_user_pr.nextval;
END;
/

CREATE SEQUENCE user_profile_page_user_profile START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER user_profile_page_user_profile BEFORE
    INSERT ON user_profile_page
    FOR EACH ROW
    WHEN ( new.user_profile_page_id IS NULL )
BEGIN
    :new.user_profile_page_id := user_profile_page_user_profile.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                             0
-- ALTER TABLE                             65
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          13
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         13
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                  11
-- WARNINGS                                 0
